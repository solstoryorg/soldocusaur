"use strict";(self.webpackChunksolstory=self.webpackChunksolstory||[]).push([[671],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return y}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(n),y=a,h=d["".concat(s,".").concat(y)]||d[y]||p[y]||o;return n?r.createElement(h,i(i({ref:t},c),{},{components:n})):r.createElement(h,i({ref:t},c))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9881:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return y},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return p}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],l={slug:"/",sidebar_position:1},s="Introduction",u={unversionedId:"intro",id:"intro",title:"Introduction",description:"Short Version",source:"@site/docs/intro.md",sourceDirName:".",slug:"/",permalink:"/",editUrl:"https://github.com/solstoryorg/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{slug:"/",sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Reading and Writing",permalink:"/usage/intro"}},c={},p=[{value:"Short Version",id:"short-version",level:2},{value:"Slightly Longer Version",id:"slightly-longer-version",level:2}],d={toc:p};function y(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"introduction"},"Introduction"),(0,o.kt)("h2",{id:"short-version"},"Short Version"),(0,o.kt)("p",null,"Solstory is a Solana program + JS library that lets you attach append only\ndata to NFTs in a standardized, cryptographically verifiable way."),(0,o.kt)("p",null,"For example, you might write the program that lets up-and-coming musicians\nsign NFTs. Solstory's infrastructure lets you write that program off-chain\nwhile allowing you to use on-chain mechanisms to prove that the signature\nhappened when it was claimed to and that the records are authentic.\nIt also ensures that an explorer or wallet capable of displaying one program\nbuilt on Solstory is capable of displaying all of them\u2013just like Metaplex\nfor the data of the NFT itself."),(0,o.kt)("h2",{id:"slightly-longer-version"},"Slightly Longer Version"),(0,o.kt)("p",null,"Solstory is a data layer built for Solana NFTs. It extends the capabilities\nprovided by Metaplex to create a verifiable, auditable mechanism for external\nprograms to attach data to individual NFTs, and in standardizing that data\ncreates a consistent way for explorers, wallets, and marketplaces to display\nthat data. It makes the location of that data chain agnostic, reducing\nstorage costs by up to 99.99% relative to keeping everything on-chain."),(0,o.kt)("p",null,"Solstory does all of that in a nearly transparent API. Initialization is only\nslightly more complex than initializing any other Anchor program, it doesn\u2019t\nrequire anything deployed to the blockchain, and appending a record requires\nnothing more than a mint pubkey (the same one you would use to query Metaplex) and\na json serializable object. Treat it as an append only log or as a SQL database\nwith an integrated history table\u2013used properly Solstory will allow you that\nand more all with the security guarantees of an on-chain Solana program."),(0,o.kt)("p",null,"Our goal is to enable more complex and interesting Solana applications by\nresolving one of the most difficult challenges in web3 applications:\ndata storage and permanance. We do that by making that data portable and displayable\nby a variety of applications, enabling NFTs that hold value not because they\nare 1/x, but because they have an interesting and unique history: A story."),(0,o.kt)("p",null,"If you want to see how to use it, you can skip straight to ",(0,o.kt)("a",{parentName:"p",href:"/usage/intro"},"usage")))}y.isMDXComponent=!0}}]);